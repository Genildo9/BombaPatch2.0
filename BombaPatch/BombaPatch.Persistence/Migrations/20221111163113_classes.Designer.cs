// <auto-generated />
using System;
using BombaPatch.Persistence.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BombaPatch.Persistence.Migrations
{
    [DbContext(typeof(BombaPatchContext))]
    [Migration("20221111163113_classes")]
    partial class classes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BombaPatch.Domain.Arbitro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QtdPartidas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Arbitros");
                });

            modelBuilder.Entity("BombaPatch.Domain.Estadio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estadios");
                });

            modelBuilder.Entity("BombaPatch.Domain.Fase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fases");
                });

            modelBuilder.Entity("BombaPatch.Domain.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GruposSelecoes");
                });

            modelBuilder.Entity("BombaPatch.Domain.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SelecaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SelecaoId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("BombaPatch.Domain.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArbitroId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrupoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResultadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SelecaoAId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SelecaoBId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ResultadoId");

                    b.HasIndex("SelecaoAId");

                    b.HasIndex("SelecaoBId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("BombaPatch.Domain.JogoResultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SelecaoJogoResultadoAId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SelecaoJogoResultadoBId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SelecaoJogoResultadoAId");

                    b.HasIndex("SelecaoJogoResultadoBId");

                    b.ToTable("ResultadoJogos");
                });

            modelBuilder.Entity("bombapatch.Domain.Selecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Continente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrupoSelecaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QtdJogadores")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Selecoes");
                });

            modelBuilder.Entity("BombaPatch.Domain.SelecaoJogoResultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartaoAmarelo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartaoVermelho")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GolsMarcados")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GolsSofridos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pontos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SelecaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ResultadoSelecao");
                });

            modelBuilder.Entity("BombaPatch.Domain.Jogador", b =>
                {
                    b.HasOne("bombapatch.Domain.Selecao", "Selecao")
                        .WithMany()
                        .HasForeignKey("SelecaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Selecao");
                });

            modelBuilder.Entity("BombaPatch.Domain.Jogo", b =>
                {
                    b.HasOne("BombaPatch.Domain.JogoResultado", "Resultado")
                        .WithMany()
                        .HasForeignKey("ResultadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bombapatch.Domain.Selecao", "SelecaoA")
                        .WithMany()
                        .HasForeignKey("SelecaoAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bombapatch.Domain.Selecao", "SelecaoB")
                        .WithMany()
                        .HasForeignKey("SelecaoBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resultado");

                    b.Navigation("SelecaoA");

                    b.Navigation("SelecaoB");
                });

            modelBuilder.Entity("BombaPatch.Domain.JogoResultado", b =>
                {
                    b.HasOne("BombaPatch.Domain.SelecaoJogoResultado", "SelecaoJogoResultadoA")
                        .WithMany()
                        .HasForeignKey("SelecaoJogoResultadoAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BombaPatch.Domain.SelecaoJogoResultado", "SelecaoJogoResultadoB")
                        .WithMany()
                        .HasForeignKey("SelecaoJogoResultadoBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SelecaoJogoResultadoA");

                    b.Navigation("SelecaoJogoResultadoB");
                });

            modelBuilder.Entity("bombapatch.Domain.Selecao", b =>
                {
                    b.HasOne("BombaPatch.Domain.Grupo", null)
                        .WithMany("Selecoes")
                        .HasForeignKey("GrupoId");
                });

            modelBuilder.Entity("BombaPatch.Domain.Grupo", b =>
                {
                    b.Navigation("Selecoes");
                });
#pragma warning restore 612, 618
        }
    }
}
