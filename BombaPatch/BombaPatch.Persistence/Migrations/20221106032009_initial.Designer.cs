// <auto-generated />
using BombaPatch.Persistence;
using BombaPatch.Persistence.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BombaPatch.Persistence.Migrations
{
    [DbContext(typeof(BombaPatchContext))]
    [Migration("20221106032009_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BombaPatch.Domain.Arbitro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QtdPartidas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Arbitros");
                });

            modelBuilder.Entity("BombaPatch.Domain.Estadio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estadios");
                });

            modelBuilder.Entity("BombaPatch.Domain.Fase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fases");
                });

            modelBuilder.Entity("BombaPatch.Domain.GrupoSelecoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartaoAmarelo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartaoVermelho")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Derrotas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Empates")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GolsMarcados")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GolsSofridos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Jogos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Pontos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaldoGols")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SelecaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vitorias")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SelecaoId");

                    b.ToTable("GruposSelecoes");
                });

            modelBuilder.Entity("BombaPatch.Domain.Jogadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SelecaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SelecaoId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("BombaPatch.Domain.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArbitroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EstadioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Jogo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArbitroId");

                    b.HasIndex("EstadioId");

                    b.HasIndex("FaseId");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("bombapatch.Domain.Selecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Continente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QtdJogadores")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Selecoes");
                });

            modelBuilder.Entity("BombaPatch.Domain.GrupoSelecoes", b =>
                {
                    b.HasOne("bombapatch.Domain.Selecao", "Selecao")
                        .WithMany("GruposSelecoes")
                        .HasForeignKey("SelecaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Selecao");
                });

            modelBuilder.Entity("BombaPatch.Domain.Jogadores", b =>
                {
                    b.HasOne("bombapatch.Domain.Selecao", "Selecao")
                        .WithMany("Jogadores")
                        .HasForeignKey("SelecaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Selecao");
                });

            modelBuilder.Entity("BombaPatch.Domain.Partida", b =>
                {
                    b.HasOne("BombaPatch.Domain.Arbitro", "Arbitro")
                        .WithMany("Partida")
                        .HasForeignKey("ArbitroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BombaPatch.Domain.Estadio", "Estadio")
                        .WithMany("Partidas")
                        .HasForeignKey("EstadioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BombaPatch.Domain.Fase", "Fase")
                        .WithMany("Partidas")
                        .HasForeignKey("FaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arbitro");

                    b.Navigation("Estadio");

                    b.Navigation("Fase");
                });

            modelBuilder.Entity("BombaPatch.Domain.Arbitro", b =>
                {
                    b.Navigation("Partida");
                });

            modelBuilder.Entity("BombaPatch.Domain.Estadio", b =>
                {
                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("BombaPatch.Domain.Fase", b =>
                {
                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("bombapatch.Domain.Selecao", b =>
                {
                    b.Navigation("GruposSelecoes");

                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
